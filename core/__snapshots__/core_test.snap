
[TestGenerateBuildPlanForExamples/config-file - 1]
{
 "baseImage": "ghcr.io/railwayapp/railpack-runtime-base:latest",
 "caches": {
  "apt": {
   "directory": "/var/cache/apt",
   "type": "locked"
  },
  "apt-lists": {
   "directory": "/var/lib/apt/lists",
   "type": "locked"
  },
  "root": {
   "directory": "/root/.cache",
   "type": "shared"
  }
 },
 "start": {
  "cmd": "neofetch",
  "outputs": [
   "."
  ]
 },
 "steps": [
  {
   "assets": {
    "mise.toml": "[mise.toml]"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "MISE_DATA_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CONFIG_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CACHE_DIR",
     "value": "/mise/cache"
    },
    {
     "path": "/mise/shims"
    },
    {
     "cmd": "sh -c 'apt-get update \u0026\u0026 apt-get install -y neofetch'",
     "customName": "install apt packages: neofetch"
    },
    {
     "customName": "create mise config",
     "name": "mise.toml",
     "path": "/etc/mise/config.toml"
    },
    {
     "cmd": "sh -c 'mise trust -a \u0026\u0026 mise install'",
     "customName": "install mise packages: python"
    }
   ],
   "name": "packages:mise",
   "outputs": [
    "/mise/shims",
    "/mise/installs",
    "/usr/local/bin/mise",
    "/etc/mise/config.toml",
    "/root/.local/state/mise"
   ],
   "startingImage": "ghcr.io/railwayapp/railpack-builder-base:latest",
   "useSecrets": false
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "PIP_CACHE_DIR",
     "value": "/opt/pip-cache"
    },
    {
     "name": "PIP_DEFAULT_TIMEOUT",
     "value": "100"
    },
    {
     "name": "PIP_DISABLE_PIP_VERSION_CHECK",
     "value": "1"
    },
    {
     "name": "PYTHONDONTWRITEBYTECODE",
     "value": "1"
    },
    {
     "name": "PYTHONFAULTHANDLER",
     "value": "1"
    },
    {
     "name": "PYTHONHASHSEED",
     "value": "random"
    },
    {
     "name": "PYTHONUNBUFFERED",
     "value": "1"
    },
    {
     "path": "/root/.local/bin"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "setup"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [],
   "dependsOn": [
    "packages:mise",
    "setup",
    "packages:apt:python-system-deps"
   ],
   "name": "install"
  },
  {
   "caches": [
    "apt",
    "apt-lists",
    "root"
   ],
   "commands": [
    {
     "cmd": "sh -c 'apt-get update \u0026\u0026 apt-get install -y pkg-config'",
     "customName": "install apt packages: pkg-config"
    }
   ],
   "name": "packages:apt:python-system-deps",
   "useSecrets": false
  },
  {
   "caches": [
    "apt",
    "apt-lists",
    "root"
   ],
   "commands": [
    {
     "cmd": "sh -c 'apt-get update \u0026\u0026 apt-get install -y neofetch'",
     "customName": "install apt packages: neofetch"
    }
   ],
   "name": "packages:apt:config",
   "useSecrets": false
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "cmd": "sh -c 'neofetch'"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "build"
  }
 ]
}
---

[TestGenerateBuildPlanForExamples/go-cmd-dirs - 1]
{
 "baseImage": "ghcr.io/railwayapp/railpack-runtime-base:latest",
 "caches": {
  "go-build": {
   "directory": "/root/.cache/go-build",
   "type": "shared"
  },
  "root": {
   "directory": "/root/.cache",
   "type": "shared"
  }
 },
 "start": {
  "baseImage": "alpine:latest",
  "cmd": "./out",
  "outputs": [
   "out"
  ],
  "variables": {
   "GIN_MODE": "release"
  }
 },
 "steps": [
  {
   "assets": {
    "mise.toml": "[mise.toml]"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "MISE_DATA_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CONFIG_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CACHE_DIR",
     "value": "/mise/cache"
    },
    {
     "path": "/mise/shims"
    },
    {
     "customName": "create mise config",
     "name": "mise.toml",
     "path": "/etc/mise/config.toml"
    },
    {
     "cmd": "sh -c 'mise trust -a \u0026\u0026 mise install'",
     "customName": "install mise packages: go"
    }
   ],
   "name": "packages:mise",
   "outputs": [
    "/mise/shims",
    "/mise/installs",
    "/usr/local/bin/mise",
    "/etc/mise/config.toml",
    "/root/.local/state/mise"
   ],
   "startingImage": "ghcr.io/railwayapp/railpack-builder-base:latest",
   "useSecrets": false
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": "go.mod",
     "src": "go.mod"
    },
    {
     "dest": "go.sum",
     "src": "go.sum"
    },
    {
     "cmd": "go mod download"
    },
    {
     "name": "CGO_ENABLED",
     "value": "0"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "install"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": ".",
     "src": "."
    },
    {
     "cmd": "go build -o out ./cmd/server"
    }
   ],
   "dependsOn": [
    "packages:mise",
    "install"
   ],
   "name": "build"
  }
 ]
}
---

[TestGenerateBuildPlanForExamples/go-mod - 1]
{
 "baseImage": "ghcr.io/railwayapp/railpack-runtime-base:latest",
 "caches": {
  "go-build": {
   "directory": "/root/.cache/go-build",
   "type": "shared"
  },
  "root": {
   "directory": "/root/.cache",
   "type": "shared"
  }
 },
 "start": {
  "baseImage": "alpine:latest",
  "cmd": "./out",
  "outputs": [
   "out"
  ]
 },
 "steps": [
  {
   "assets": {
    "mise.toml": "[mise.toml]"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "MISE_DATA_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CONFIG_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CACHE_DIR",
     "value": "/mise/cache"
    },
    {
     "path": "/mise/shims"
    },
    {
     "customName": "create mise config",
     "name": "mise.toml",
     "path": "/etc/mise/config.toml"
    },
    {
     "cmd": "sh -c 'mise trust -a \u0026\u0026 mise install'",
     "customName": "install mise packages: go"
    }
   ],
   "name": "packages:mise",
   "outputs": [
    "/mise/shims",
    "/mise/installs",
    "/usr/local/bin/mise",
    "/etc/mise/config.toml",
    "/root/.local/state/mise"
   ],
   "startingImage": "ghcr.io/railwayapp/railpack-builder-base:latest",
   "useSecrets": false
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": "go.mod",
     "src": "go.mod"
    },
    {
     "dest": "go.sum",
     "src": "go.sum"
    },
    {
     "cmd": "go mod download"
    },
    {
     "name": "CGO_ENABLED",
     "value": "0"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "install"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": ".",
     "src": "."
    },
    {
     "cmd": "go build -o out"
    }
   ],
   "dependsOn": [
    "packages:mise",
    "install"
   ],
   "name": "build"
  }
 ]
}
---

[TestGenerateBuildPlanForExamples/node-bun - 1]
{
 "baseImage": "ghcr.io/railwayapp/railpack-runtime-base:latest",
 "caches": {
  "bun-install": {
   "directory": "/root/.bun/install/cache",
   "type": "shared"
  },
  "node-modules": {
   "directory": "/app/node_modules/.cache",
   "type": "shared"
  },
  "root": {
   "directory": "/root/.cache",
   "type": "shared"
  }
 },
 "start": {
  "cmd": "bun index.ts",
  "outputs": [
   "."
  ],
  "variables": {
   "CI": "true",
   "NODE_ENV": "production",
   "NPM_CONFIG_PRODUCTION": "false",
   "YARN_PRODUCTION": "false"
  }
 },
 "steps": [
  {
   "assets": {
    "mise.toml": "[mise.toml]"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "MISE_DATA_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CONFIG_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CACHE_DIR",
     "value": "/mise/cache"
    },
    {
     "path": "/mise/shims"
    },
    {
     "customName": "create mise config",
     "name": "mise.toml",
     "path": "/etc/mise/config.toml"
    },
    {
     "cmd": "sh -c 'mise trust -a \u0026\u0026 mise install'",
     "customName": "install mise packages: bun"
    }
   ],
   "name": "packages:mise",
   "outputs": [
    "/mise/shims",
    "/mise/installs",
    "/usr/local/bin/mise",
    "/etc/mise/config.toml",
    "/root/.local/state/mise"
   ],
   "startingImage": "ghcr.io/railwayapp/railpack-builder-base:latest",
   "useSecrets": false
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "CI",
     "value": "true"
    },
    {
     "name": "NODE_ENV",
     "value": "production"
    },
    {
     "name": "NPM_CONFIG_PRODUCTION",
     "value": "false"
    },
    {
     "name": "YARN_PRODUCTION",
     "value": "false"
    },
    {
     "path": "/app/node_modules/.bin"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "setup"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": "package.json",
     "src": "package.json"
    },
    {
     "dest": "bun.lockb",
     "src": "bun.lockb"
    },
    {
     "cmd": "bun install --frozen-lockfile"
    }
   ],
   "dependsOn": [
    "packages:mise",
    "setup"
   ],
   "name": "install"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": ".",
     "src": "."
    },
    {
     "cmd": "bun run build"
    }
   ],
   "dependsOn": [
    "install"
   ],
   "name": "build"
  }
 ]
}
---

[TestGenerateBuildPlanForExamples/node-corepack - 1]
{
 "baseImage": "ghcr.io/railwayapp/railpack-runtime-base:latest",
 "caches": {
  "node-modules": {
   "directory": "/app/node_modules/.cache",
   "type": "shared"
  },
  "pnpm-install": {
   "directory": "/root/.local/share/pnpm/store/v3",
   "type": "shared"
  },
  "root": {
   "directory": "/root/.cache",
   "type": "shared"
  }
 },
 "start": {
  "cmd": "pnpm run start",
  "outputs": [
   "."
  ],
  "variables": {
   "CI": "true",
   "NODE_ENV": "production",
   "NPM_CONFIG_PRODUCTION": "false",
   "YARN_PRODUCTION": "false"
  }
 },
 "steps": [
  {
   "assets": {
    "mise.toml": "[mise.toml]"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "MISE_DATA_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CONFIG_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CACHE_DIR",
     "value": "/mise/cache"
    },
    {
     "path": "/mise/shims"
    },
    {
     "customName": "create mise config",
     "name": "mise.toml",
     "path": "/etc/mise/config.toml"
    },
    {
     "cmd": "sh -c 'mise trust -a \u0026\u0026 mise install'",
     "customName": "install mise packages: node, pnpm"
    }
   ],
   "name": "packages:mise",
   "outputs": [
    "/mise/shims",
    "/mise/installs",
    "/usr/local/bin/mise",
    "/etc/mise/config.toml",
    "/root/.local/state/mise"
   ],
   "startingImage": "ghcr.io/railwayapp/railpack-builder-base:latest",
   "useSecrets": false
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "CI",
     "value": "true"
    },
    {
     "name": "NODE_ENV",
     "value": "production"
    },
    {
     "name": "NPM_CONFIG_PRODUCTION",
     "value": "false"
    },
    {
     "name": "YARN_PRODUCTION",
     "value": "false"
    },
    {
     "path": "/app/node_modules/.bin"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "setup"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": "package.json",
     "src": "package.json"
    },
    {
     "cmd": "corepack enable"
    },
    {
     "cmd": "corepack prepare --activate"
    }
   ],
   "dependsOn": [
    "packages:mise",
    "setup"
   ],
   "name": "corepack"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": "package.json",
     "src": "package.json"
    },
    {
     "dest": "pnpm-lock.yaml",
     "src": "pnpm-lock.yaml"
    },
    {
     "cmd": "pnpm install --frozen-lockfile --prod=false"
    }
   ],
   "dependsOn": [
    "packages:mise",
    "setup",
    "corepack"
   ],
   "name": "install"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": ".",
     "src": "."
    },
    {
     "cmd": "pnpm run build"
    }
   ],
   "dependsOn": [
    "install"
   ],
   "name": "build"
  }
 ]
}
---

[TestGenerateBuildPlanForExamples/node-pnpm-workspaces - 1]
{
 "baseImage": "ghcr.io/railwayapp/railpack-runtime-base:latest",
 "caches": {
  "root": {
   "directory": "/root/.cache",
   "type": "shared"
  }
 },
 "start": {
  "cmd": "node index.js",
  "outputs": [
   "."
  ],
  "variables": {
   "CI": "true",
   "NODE_ENV": "production",
   "NPM_CONFIG_PRODUCTION": "false",
   "YARN_PRODUCTION": "false"
  }
 },
 "steps": [
  {
   "assets": {
    "mise.toml": "[mise.toml]"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "MISE_DATA_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CONFIG_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CACHE_DIR",
     "value": "/mise/cache"
    },
    {
     "path": "/mise/shims"
    },
    {
     "customName": "create mise config",
     "name": "mise.toml",
     "path": "/etc/mise/config.toml"
    },
    {
     "cmd": "sh -c 'mise trust -a \u0026\u0026 mise install'",
     "customName": "install mise packages: node, pnpm"
    }
   ],
   "name": "packages:mise",
   "outputs": [
    "/mise/shims",
    "/mise/installs",
    "/usr/local/bin/mise",
    "/etc/mise/config.toml",
    "/root/.local/state/mise"
   ],
   "startingImage": "ghcr.io/railwayapp/railpack-builder-base:latest",
   "useSecrets": false
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "CI",
     "value": "true"
    },
    {
     "name": "NODE_ENV",
     "value": "production"
    },
    {
     "name": "NPM_CONFIG_PRODUCTION",
     "value": "false"
    },
    {
     "name": "YARN_PRODUCTION",
     "value": "false"
    },
    {
     "path": "/app/node_modules/.bin"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "setup"
  }
 ]
}
---

[TestGenerateBuildPlanForExamples/python-pdm - 1]
{
 "baseImage": "ghcr.io/railwayapp/railpack-runtime-base:latest",
 "caches": {
  "apt": {
   "directory": "/var/cache/apt",
   "type": "locked"
  },
  "apt-lists": {
   "directory": "/var/lib/apt/lists",
   "type": "locked"
  },
  "root": {
   "directory": "/root/.cache",
   "type": "shared"
  }
 },
 "start": {
  "cmd": "python main.py",
  "outputs": [
   "."
  ]
 },
 "steps": [
  {
   "assets": {
    "mise.toml": "[mise.toml]"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "MISE_DATA_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CONFIG_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CACHE_DIR",
     "value": "/mise/cache"
    },
    {
     "path": "/mise/shims"
    },
    {
     "customName": "create mise config",
     "name": "mise.toml",
     "path": "/etc/mise/config.toml"
    },
    {
     "cmd": "sh -c 'mise trust -a \u0026\u0026 mise install'",
     "customName": "install mise packages: pipx, python"
    }
   ],
   "name": "packages:mise",
   "outputs": [
    "/mise/shims",
    "/mise/installs",
    "/usr/local/bin/mise",
    "/etc/mise/config.toml",
    "/root/.local/state/mise"
   ],
   "startingImage": "ghcr.io/railwayapp/railpack-builder-base:latest",
   "useSecrets": false
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "PIP_CACHE_DIR",
     "value": "/opt/pip-cache"
    },
    {
     "name": "PIP_DEFAULT_TIMEOUT",
     "value": "100"
    },
    {
     "name": "PIP_DISABLE_PIP_VERSION_CHECK",
     "value": "1"
    },
    {
     "name": "PYTHONDONTWRITEBYTECODE",
     "value": "1"
    },
    {
     "name": "PYTHONFAULTHANDLER",
     "value": "1"
    },
    {
     "name": "PYTHONHASHSEED",
     "value": "random"
    },
    {
     "name": "PYTHONUNBUFFERED",
     "value": "1"
    },
    {
     "path": "/root/.local/bin"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "setup"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "cmd": "pipx install pdm"
    },
    {
     "name": "PDM_CHECK_UPDATE",
     "value": "false"
    },
    {
     "dest": "pyproject.toml",
     "src": "pyproject.toml"
    },
    {
     "dest": "pdm.lock",
     "src": "pdm.lock"
    },
    {
     "dest": ".",
     "src": "."
    },
    {
     "cmd": "pdm install --check --prod --no-editable"
    },
    {
     "path": "/app/.venv/bin"
    }
   ],
   "dependsOn": [
    "packages:mise",
    "setup",
    "packages:apt:python-system-deps"
   ],
   "name": "install"
  },
  {
   "caches": [
    "apt",
    "apt-lists",
    "root"
   ],
   "commands": [
    {
     "cmd": "sh -c 'apt-get update \u0026\u0026 apt-get install -y pkg-config'",
     "customName": "install apt packages: pkg-config"
    }
   ],
   "name": "packages:apt:python-system-deps",
   "useSecrets": false
  }
 ]
}
---

[TestGenerateBuildPlanForExamples/python-pip - 1]
{
 "baseImage": "ghcr.io/railwayapp/railpack-runtime-base:latest",
 "caches": {
  "apt": {
   "directory": "/var/cache/apt",
   "type": "locked"
  },
  "apt-lists": {
   "directory": "/var/lib/apt/lists",
   "type": "locked"
  },
  "pip": {
   "directory": "/opt/pip-cache",
   "type": "shared"
  },
  "root": {
   "directory": "/root/.cache",
   "type": "shared"
  }
 },
 "start": {
  "cmd": "python main.py",
  "outputs": [
   "."
  ]
 },
 "steps": [
  {
   "assets": {
    "mise.toml": "[mise.toml]"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "MISE_DATA_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CONFIG_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CACHE_DIR",
     "value": "/mise/cache"
    },
    {
     "path": "/mise/shims"
    },
    {
     "customName": "create mise config",
     "name": "mise.toml",
     "path": "/etc/mise/config.toml"
    },
    {
     "cmd": "sh -c 'mise trust -a \u0026\u0026 mise install'",
     "customName": "install mise packages: python"
    }
   ],
   "name": "packages:mise",
   "outputs": [
    "/mise/shims",
    "/mise/installs",
    "/usr/local/bin/mise",
    "/etc/mise/config.toml",
    "/root/.local/state/mise"
   ],
   "startingImage": "ghcr.io/railwayapp/railpack-builder-base:latest",
   "useSecrets": false
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "PIP_CACHE_DIR",
     "value": "/opt/pip-cache"
    },
    {
     "name": "PIP_DEFAULT_TIMEOUT",
     "value": "100"
    },
    {
     "name": "PIP_DISABLE_PIP_VERSION_CHECK",
     "value": "1"
    },
    {
     "name": "PYTHONDONTWRITEBYTECODE",
     "value": "1"
    },
    {
     "name": "PYTHONFAULTHANDLER",
     "value": "1"
    },
    {
     "name": "PYTHONHASHSEED",
     "value": "random"
    },
    {
     "name": "PYTHONUNBUFFERED",
     "value": "1"
    },
    {
     "path": "/root/.local/bin"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "setup"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": "requirements.txt",
     "src": "requirements.txt"
    },
    {
     "cmd": "pip install -r requirements.txt"
    }
   ],
   "dependsOn": [
    "packages:mise",
    "setup",
    "packages:apt:python-system-deps"
   ],
   "name": "install"
  },
  {
   "caches": [
    "apt",
    "apt-lists",
    "root"
   ],
   "commands": [
    {
     "cmd": "sh -c 'apt-get update \u0026\u0026 apt-get install -y pkg-config'",
     "customName": "install apt packages: pkg-config"
    }
   ],
   "name": "packages:apt:python-system-deps",
   "useSecrets": false
  }
 ]
}
---

[TestGenerateBuildPlanForExamples/python-poetry - 1]
{
 "baseImage": "ghcr.io/railwayapp/railpack-runtime-base:latest",
 "caches": {
  "apt": {
   "directory": "/var/cache/apt",
   "type": "locked"
  },
  "apt-lists": {
   "directory": "/var/lib/apt/lists",
   "type": "locked"
  },
  "root": {
   "directory": "/root/.cache",
   "type": "shared"
  }
 },
 "start": {
  "cmd": "python main.py",
  "outputs": [
   "."
  ]
 },
 "steps": [
  {
   "assets": {
    "mise.toml": "[mise.toml]"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "MISE_DATA_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CONFIG_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CACHE_DIR",
     "value": "/mise/cache"
    },
    {
     "path": "/mise/shims"
    },
    {
     "customName": "create mise config",
     "name": "mise.toml",
     "path": "/etc/mise/config.toml"
    },
    {
     "cmd": "sh -c 'mise trust -a \u0026\u0026 mise install'",
     "customName": "install mise packages: pipx, python"
    }
   ],
   "name": "packages:mise",
   "outputs": [
    "/mise/shims",
    "/mise/installs",
    "/usr/local/bin/mise",
    "/etc/mise/config.toml",
    "/root/.local/state/mise"
   ],
   "startingImage": "ghcr.io/railwayapp/railpack-builder-base:latest",
   "useSecrets": false
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "PIP_CACHE_DIR",
     "value": "/opt/pip-cache"
    },
    {
     "name": "PIP_DEFAULT_TIMEOUT",
     "value": "100"
    },
    {
     "name": "PIP_DISABLE_PIP_VERSION_CHECK",
     "value": "1"
    },
    {
     "name": "PYTHONDONTWRITEBYTECODE",
     "value": "1"
    },
    {
     "name": "PYTHONFAULTHANDLER",
     "value": "1"
    },
    {
     "name": "PYTHONHASHSEED",
     "value": "random"
    },
    {
     "name": "PYTHONUNBUFFERED",
     "value": "1"
    },
    {
     "path": "/root/.local/bin"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "setup"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "cmd": "pipx install poetry"
    },
    {
     "cmd": "poetry config virtualenvs.create false"
    },
    {
     "dest": "pyproject.toml",
     "src": "pyproject.toml"
    },
    {
     "dest": "poetry.lock",
     "src": "poetry.lock"
    },
    {
     "cmd": "poetry install --no-interaction --no-ansi --no-root"
    }
   ],
   "dependsOn": [
    "packages:mise",
    "setup",
    "packages:apt:python-system-deps"
   ],
   "name": "install"
  },
  {
   "caches": [
    "apt",
    "apt-lists",
    "root"
   ],
   "commands": [
    {
     "cmd": "sh -c 'apt-get update \u0026\u0026 apt-get install -y pkg-config'",
     "customName": "install apt packages: pkg-config"
    }
   ],
   "name": "packages:apt:python-system-deps",
   "useSecrets": false
  }
 ]
}
---

[TestGenerateBuildPlanForExamples/python-system-deps - 1]
{
 "baseImage": "ghcr.io/railwayapp/railpack-runtime-base:latest",
 "caches": {
  "apt": {
   "directory": "/var/cache/apt",
   "type": "locked"
  },
  "apt-lists": {
   "directory": "/var/lib/apt/lists",
   "type": "locked"
  },
  "pip": {
   "directory": "/opt/pip-cache",
   "type": "shared"
  },
  "root": {
   "directory": "/root/.cache",
   "type": "shared"
  }
 },
 "start": {
  "cmd": "python main.py",
  "outputs": [
   "."
  ]
 },
 "steps": [
  {
   "assets": {
    "mise.toml": "[mise.toml]"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "MISE_DATA_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CONFIG_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CACHE_DIR",
     "value": "/mise/cache"
    },
    {
     "path": "/mise/shims"
    },
    {
     "dest": "/app/.python-version",
     "src": ".python-version"
    },
    {
     "customName": "create mise config",
     "name": "mise.toml",
     "path": "/etc/mise/config.toml"
    },
    {
     "cmd": "sh -c 'mise trust -a \u0026\u0026 mise install'",
     "customName": "install mise packages: python"
    }
   ],
   "name": "packages:mise",
   "outputs": [
    "/mise/shims",
    "/mise/installs",
    "/usr/local/bin/mise",
    "/etc/mise/config.toml",
    "/root/.local/state/mise",
    "/app/.python-version"
   ],
   "startingImage": "ghcr.io/railwayapp/railpack-builder-base:latest",
   "useSecrets": false
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "PIP_CACHE_DIR",
     "value": "/opt/pip-cache"
    },
    {
     "name": "PIP_DEFAULT_TIMEOUT",
     "value": "100"
    },
    {
     "name": "PIP_DISABLE_PIP_VERSION_CHECK",
     "value": "1"
    },
    {
     "name": "PYTHONDONTWRITEBYTECODE",
     "value": "1"
    },
    {
     "name": "PYTHONFAULTHANDLER",
     "value": "1"
    },
    {
     "name": "PYTHONHASHSEED",
     "value": "random"
    },
    {
     "name": "PYTHONUNBUFFERED",
     "value": "1"
    },
    {
     "path": "/root/.local/bin"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "setup"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": "requirements.txt",
     "src": "requirements.txt"
    },
    {
     "cmd": "pip install -r requirements.txt"
    }
   ],
   "dependsOn": [
    "packages:mise",
    "setup",
    "packages:apt:python-system-deps"
   ],
   "name": "install"
  },
  {
   "caches": [
    "apt",
    "apt-lists",
    "root"
   ],
   "commands": [
    {
     "cmd": "sh -c 'apt-get update \u0026\u0026 apt-get install -y ffmpeg gcc pkg-config poppler-utils'",
     "customName": "install apt packages: ffmpeg gcc pkg-config poppler-utils"
    }
   ],
   "name": "packages:apt:python-system-deps",
   "useSecrets": false
  }
 ]
}
---

[TestGenerateBuildPlanForExamples/python-uv - 1]
{
 "baseImage": "ghcr.io/railwayapp/railpack-runtime-base:latest",
 "caches": {
  "apt": {
   "directory": "/var/cache/apt",
   "type": "locked"
  },
  "apt-lists": {
   "directory": "/var/lib/apt/lists",
   "type": "locked"
  },
  "root": {
   "directory": "/root/.cache",
   "type": "shared"
  }
 },
 "start": {
  "cmd": "gunicorn --bind 0.0.0.0:3333 main:app",
  "outputs": [
   "."
  ]
 },
 "steps": [
  {
   "assets": {
    "mise.toml": "[mise.toml]"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "MISE_DATA_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CONFIG_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CACHE_DIR",
     "value": "/mise/cache"
    },
    {
     "path": "/mise/shims"
    },
    {
     "dest": "/app/.python-version",
     "src": ".python-version"
    },
    {
     "customName": "create mise config",
     "name": "mise.toml",
     "path": "/etc/mise/config.toml"
    },
    {
     "cmd": "sh -c 'mise trust -a \u0026\u0026 mise install'",
     "customName": "install mise packages: pipx, python"
    }
   ],
   "name": "packages:mise",
   "outputs": [
    "/mise/shims",
    "/mise/installs",
    "/usr/local/bin/mise",
    "/etc/mise/config.toml",
    "/root/.local/state/mise",
    "/app/.python-version"
   ],
   "startingImage": "ghcr.io/railwayapp/railpack-builder-base:latest",
   "useSecrets": false
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "PIP_CACHE_DIR",
     "value": "/opt/pip-cache"
    },
    {
     "name": "PIP_DEFAULT_TIMEOUT",
     "value": "100"
    },
    {
     "name": "PIP_DISABLE_PIP_VERSION_CHECK",
     "value": "1"
    },
    {
     "name": "PYTHONDONTWRITEBYTECODE",
     "value": "1"
    },
    {
     "name": "PYTHONFAULTHANDLER",
     "value": "1"
    },
    {
     "name": "PYTHONHASHSEED",
     "value": "random"
    },
    {
     "name": "PYTHONUNBUFFERED",
     "value": "1"
    },
    {
     "path": "/root/.local/bin"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "setup"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "UV_COMPILE_BYTECODE",
     "value": "1"
    },
    {
     "name": "UV_LINK_MODE",
     "value": "copy"
    },
    {
     "name": "UV_CACHE_DIR",
     "value": "/opt/uv-cache"
    },
    {
     "cmd": "pipx install uv"
    },
    {
     "dest": "pyproject.toml",
     "src": "pyproject.toml"
    },
    {
     "dest": "uv.lock",
     "src": "uv.lock"
    },
    {
     "cmd": "uv sync --frozen --no-install-project --no-install-workspace --no-dev"
    },
    {
     "dest": ".",
     "src": "."
    },
    {
     "cmd": "uv sync --frozen --no-dev"
    },
    {
     "path": "/app/.venv/bin"
    }
   ],
   "dependsOn": [
    "packages:mise",
    "setup",
    "packages:apt:python-system-deps"
   ],
   "name": "install"
  },
  {
   "caches": [
    "apt",
    "apt-lists",
    "root"
   ],
   "commands": [
    {
     "cmd": "sh -c 'apt-get update \u0026\u0026 apt-get install -y pkg-config'",
     "customName": "install apt packages: pkg-config"
    }
   ],
   "name": "packages:apt:python-system-deps",
   "useSecrets": false
  }
 ]
}
---

[TestGenerateBuildPlanForExamples/secrets - 1]
{
 "baseImage": "ghcr.io/railwayapp/railpack-runtime-base:latest",
 "caches": {
  "root": {
   "directory": "/root/.cache",
   "type": "shared"
  }
 },
 "secrets": [
  "MY_SECRET",
  "MY_OTHER_SECRET",
  "HELLO_WORLD"
 ],
 "start": {
  "cmd": "./run.sh"
 },
 "steps": [
  {
   "caches": [
    "root"
   ],
   "name": "packages:mise"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "NOT_SECRET",
     "value": "not secret"
    },
    {
     "dest": ".",
     "src": "."
    },
    {
     "cmd": "sh -c './run.sh'"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "defaultsToUsing"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": ".",
     "src": "."
    },
    {
     "cmd": "sh -c './run.sh true'"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "doesNotUseSecrets",
   "useSecrets": false
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "NOT_SECRET",
     "value": "not secret"
    },
    {
     "dest": ".",
     "src": "."
    },
    {
     "cmd": "sh -c './run.sh'"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "usesSecrets"
  }
 ]
}
---

[TestGenerateBuildPlanForExamples/staticfile-config - 1]
{
 "baseImage": "ghcr.io/railwayapp/railpack-runtime-base:latest",
 "caches": {
  "root": {
   "directory": "/root/.cache",
   "type": "shared"
  }
 },
 "start": {
  "cmd": "caddy run --config Caddyfile --adapter caddyfile 2\u003e\u00261",
  "outputs": [
   "."
  ]
 },
 "steps": [
  {
   "assets": {
    "mise.toml": "[mise.toml]"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "MISE_DATA_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CONFIG_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CACHE_DIR",
     "value": "/mise/cache"
    },
    {
     "path": "/mise/shims"
    },
    {
     "customName": "create mise config",
     "name": "mise.toml",
     "path": "/etc/mise/config.toml"
    },
    {
     "cmd": "sh -c 'mise trust -a \u0026\u0026 mise install'",
     "customName": "install mise packages: caddy"
    }
   ],
   "name": "packages:mise",
   "outputs": [
    "/mise/shims",
    "/mise/installs",
    "/usr/local/bin/mise",
    "/etc/mise/config.toml",
    "/root/.local/state/mise"
   ],
   "startingImage": "ghcr.io/railwayapp/railpack-builder-base:latest",
   "useSecrets": false
  },
  {
   "assets": {
    "Caddyfile": "{\n\tadmin off\n\tpersist_config off\n\tauto_https off\n\n\tlog {\n\t\tformat json\n\t}\n\n\tservers {\n\t\ttrusted_proxies static private_ranges\n\t}\n}\n\n:{$PORT:80} {\n\tlog {\n\t\tformat json\n\t}\n\n\trespond /health 200\n\n# Security headers\n\theader {\n\t\t# Enable cross-site filter (XSS) and tell browsers to block detected attacks\n\t\tX-XSS-Protection \"1; mode=block\"\n\t\t# Prevent some browsers from MIME-sniffing a response away from the declared Content-Type\n\t\tX-Content-Type-Options \"nosniff\"\n\t\t# Keep referrer data off of HTTP connections\n\t\tReferrer-Policy \"strict-origin-when-cross-origin\"\n\t\t# Enable strict Content Security Policy\n\t\tContent-Security-Policy \"default-src 'self'; img-src 'self' data: https: *; style-src 'self' 'unsafe-inline' https: *; script-src 'self' 'unsafe-inline' https: *; font-src 'self' data: https: *; connect-src 'self' https: *; media-src 'self' https: *; object-src 'none'; frame-src 'self' https: *;\"\n\t\t# Remove Server header\n\t\t-Server\n\t}\n\n\troot * hello\n\n\t# Handle static files\n\tfile_server {\n\t\thide .git\n\t\thide .env*\n\t}\n\n\t# Compression with more formats\n\tencode {\n\t\tgzip\n\t\tzstd\n\t}\n\n\t# Try files with HTML extension and handle SPA routing\n\ttry_files {path} {path}.html {path}/index.html /index.html\n\n\t# Handle 404 errors\n\thandle_errors {\n\t\trewrite * /{err.status_code}.html\n\t\tfile_server\n\t}\n}\n"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "Caddyfile",
     "path": "Caddyfile"
    },
    {
     "cmd": "caddy fmt --overwrite Caddyfile"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "setup"
  }
 ]
}
---

[TestGenerateBuildPlanForExamples/staticfile-index - 1]
{
 "baseImage": "ghcr.io/railwayapp/railpack-runtime-base:latest",
 "caches": {
  "root": {
   "directory": "/root/.cache",
   "type": "shared"
  }
 },
 "start": {
  "cmd": "caddy run --config Caddyfile --adapter caddyfile 2\u003e\u00261",
  "outputs": [
   "."
  ]
 },
 "steps": [
  {
   "assets": {
    "mise.toml": "[mise.toml]"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "MISE_DATA_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CONFIG_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CACHE_DIR",
     "value": "/mise/cache"
    },
    {
     "path": "/mise/shims"
    },
    {
     "customName": "create mise config",
     "name": "mise.toml",
     "path": "/etc/mise/config.toml"
    },
    {
     "cmd": "sh -c 'mise trust -a \u0026\u0026 mise install'",
     "customName": "install mise packages: caddy"
    }
   ],
   "name": "packages:mise",
   "outputs": [
    "/mise/shims",
    "/mise/installs",
    "/usr/local/bin/mise",
    "/etc/mise/config.toml",
    "/root/.local/state/mise"
   ],
   "startingImage": "ghcr.io/railwayapp/railpack-builder-base:latest",
   "useSecrets": false
  },
  {
   "assets": {
    "Caddyfile": "{\n\tadmin off\n\tpersist_config off\n\tauto_https off\n\n\tlog {\n\t\tformat json\n\t}\n\n\tservers {\n\t\ttrusted_proxies static private_ranges\n\t}\n}\n\n:{$PORT:80} {\n\tlog {\n\t\tformat json\n\t}\n\n\trespond /health 200\n\n# Security headers\n\theader {\n\t\t# Enable cross-site filter (XSS) and tell browsers to block detected attacks\n\t\tX-XSS-Protection \"1; mode=block\"\n\t\t# Prevent some browsers from MIME-sniffing a response away from the declared Content-Type\n\t\tX-Content-Type-Options \"nosniff\"\n\t\t# Keep referrer data off of HTTP connections\n\t\tReferrer-Policy \"strict-origin-when-cross-origin\"\n\t\t# Enable strict Content Security Policy\n\t\tContent-Security-Policy \"default-src 'self'; img-src 'self' data: https: *; style-src 'self' 'unsafe-inline' https: *; script-src 'self' 'unsafe-inline' https: *; font-src 'self' data: https: *; connect-src 'self' https: *; media-src 'self' https: *; object-src 'none'; frame-src 'self' https: *;\"\n\t\t# Remove Server header\n\t\t-Server\n\t}\n\n\troot * .\n\n\t# Handle static files\n\tfile_server {\n\t\thide .git\n\t\thide .env*\n\t}\n\n\t# Compression with more formats\n\tencode {\n\t\tgzip\n\t\tzstd\n\t}\n\n\t# Try files with HTML extension and handle SPA routing\n\ttry_files {path} {path}.html {path}/index.html /index.html\n\n\t# Handle 404 errors\n\thandle_errors {\n\t\trewrite * /{err.status_code}.html\n\t\tfile_server\n\t}\n}\n"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "Caddyfile",
     "path": "Caddyfile"
    },
    {
     "cmd": "caddy fmt --overwrite Caddyfile"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "setup"
  }
 ]
}
---

[TestGenerateBuildPlanForExamples/mise-config - 1]
{
 "baseImage": "ghcr.io/railwayapp/railpack-runtime-base:latest",
 "caches": {
  "node-modules": {
   "directory": "/app/node_modules/.cache",
   "type": "shared"
  },
  "npm-install": {
   "directory": "/root/.npm",
   "type": "shared"
  },
  "root": {
   "directory": "/root/.cache",
   "type": "shared"
  }
 },
 "start": {
  "cmd": "npm run start",
  "outputs": [
   "."
  ],
  "variables": {
   "CI": "true",
   "NODE_ENV": "production",
   "NPM_CONFIG_PRODUCTION": "false",
   "YARN_PRODUCTION": "false"
  }
 },
 "steps": [
  {
   "assets": {
    "mise.toml": "[mise.toml]"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "MISE_DATA_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CONFIG_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CACHE_DIR",
     "value": "/mise/cache"
    },
    {
     "path": "/mise/shims"
    },
    {
     "dest": "/app/mise.toml",
     "src": "mise.toml"
    },
    {
     "customName": "create mise config",
     "name": "mise.toml",
     "path": "/etc/mise/config.toml"
    },
    {
     "cmd": "sh -c 'mise trust -a \u0026\u0026 mise install'",
     "customName": "install mise packages: node, npm"
    }
   ],
   "name": "packages:mise",
   "outputs": [
    "/mise/shims",
    "/mise/installs",
    "/usr/local/bin/mise",
    "/etc/mise/config.toml",
    "/root/.local/state/mise",
    "/app/mise.toml"
   ],
   "startingImage": "ghcr.io/railwayapp/railpack-builder-base:latest",
   "useSecrets": false
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "CI",
     "value": "true"
    },
    {
     "name": "NODE_ENV",
     "value": "production"
    },
    {
     "name": "NPM_CONFIG_PRODUCTION",
     "value": "false"
    },
    {
     "name": "YARN_PRODUCTION",
     "value": "false"
    },
    {
     "path": "/app/node_modules/.bin"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "setup"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": "package.json",
     "src": "package.json"
    },
    {
     "cmd": "npm install"
    }
   ],
   "dependsOn": [
    "packages:mise",
    "setup"
   ],
   "name": "install"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": ".",
     "src": "."
    },
    {
     "cmd": "npm run build"
    }
   ],
   "dependsOn": [
    "install"
   ],
   "name": "build"
  }
 ]
}
---

[TestGenerateBuildPlanForExamples/node-npm - 1]
{
 "baseImage": "ghcr.io/railwayapp/railpack-runtime-base:latest",
 "caches": {
  "npm-install": {
   "directory": "/root/.npm",
   "type": "shared"
  },
  "root": {
   "directory": "/root/.cache",
   "type": "shared"
  }
 },
 "start": {
  "cmd": "npm run start",
  "outputs": [
   "."
  ],
  "variables": {
   "CI": "true",
   "NODE_ENV": "production",
   "NPM_CONFIG_PRODUCTION": "false",
   "YARN_PRODUCTION": "false"
  }
 },
 "steps": [
  {
   "assets": {
    "mise.toml": "[mise.toml]"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "MISE_DATA_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CONFIG_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CACHE_DIR",
     "value": "/mise/cache"
    },
    {
     "path": "/mise/shims"
    },
    {
     "customName": "create mise config",
     "name": "mise.toml",
     "path": "/etc/mise/config.toml"
    },
    {
     "cmd": "sh -c 'mise trust -a \u0026\u0026 mise install'",
     "customName": "install mise packages: node, npm"
    }
   ],
   "name": "packages:mise",
   "outputs": [
    "/mise/shims",
    "/mise/installs",
    "/usr/local/bin/mise",
    "/etc/mise/config.toml",
    "/root/.local/state/mise"
   ],
   "startingImage": "ghcr.io/railwayapp/railpack-builder-base:latest",
   "useSecrets": false
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "CI",
     "value": "true"
    },
    {
     "name": "NODE_ENV",
     "value": "production"
    },
    {
     "name": "NPM_CONFIG_PRODUCTION",
     "value": "false"
    },
    {
     "name": "YARN_PRODUCTION",
     "value": "false"
    },
    {
     "path": "/app/node_modules/.bin"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "setup"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": "package.json",
     "src": "package.json"
    },
    {
     "dest": "package-lock.json",
     "src": "package-lock.json"
    },
    {
     "cmd": "npm ci"
    }
   ],
   "dependsOn": [
    "packages:mise",
    "setup"
   ],
   "name": "install"
  }
 ]
}
---

[TestGenerateBuildPlanForExamples/node-npm-workspaces - 1]
{
 "baseImage": "ghcr.io/railwayapp/railpack-runtime-base:latest",
 "caches": {
  "npm-install": {
   "directory": "/root/.npm",
   "type": "shared"
  },
  "root": {
   "directory": "/root/.cache",
   "type": "shared"
  }
 },
 "start": {
  "cmd": "node index.js",
  "outputs": [
   "."
  ],
  "variables": {
   "CI": "true",
   "NODE_ENV": "production",
   "NPM_CONFIG_PRODUCTION": "false",
   "YARN_PRODUCTION": "false"
  }
 },
 "steps": [
  {
   "assets": {
    "mise.toml": "[mise.toml]"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "MISE_DATA_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CONFIG_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CACHE_DIR",
     "value": "/mise/cache"
    },
    {
     "path": "/mise/shims"
    },
    {
     "customName": "create mise config",
     "name": "mise.toml",
     "path": "/etc/mise/config.toml"
    },
    {
     "cmd": "sh -c 'mise trust -a \u0026\u0026 mise install'",
     "customName": "install mise packages: node, npm"
    }
   ],
   "name": "packages:mise",
   "outputs": [
    "/mise/shims",
    "/mise/installs",
    "/usr/local/bin/mise",
    "/etc/mise/config.toml",
    "/root/.local/state/mise"
   ],
   "startingImage": "ghcr.io/railwayapp/railpack-builder-base:latest",
   "useSecrets": false
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "CI",
     "value": "true"
    },
    {
     "name": "NODE_ENV",
     "value": "production"
    },
    {
     "name": "NPM_CONFIG_PRODUCTION",
     "value": "false"
    },
    {
     "name": "YARN_PRODUCTION",
     "value": "false"
    },
    {
     "path": "/app/node_modules/.bin"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "setup"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": "package.json",
     "src": "package.json"
    },
    {
     "dest": "packages/pkg-a/package.json",
     "src": "packages/pkg-a/package.json"
    },
    {
     "dest": "packages/pkg-b/package.json",
     "src": "packages/pkg-b/package.json"
    },
    {
     "dest": "package-lock.json",
     "src": "package-lock.json"
    },
    {
     "cmd": "npm ci"
    }
   ],
   "dependsOn": [
    "packages:mise",
    "setup"
   ],
   "name": "install"
  }
 ]
}
---

[TestGenerateBuildPlanForExamples/php-laravel-inertia - 1]
{
 "baseImage": "ghcr.io/railwayapp/railpack-runtime-base:latest",
 "caches": {
  "apt": {
   "directory": "/var/cache/apt",
   "type": "locked"
  },
  "apt-lists": {
   "directory": "/var/lib/apt/lists",
   "type": "locked"
  },
  "composer": {
   "directory": "/opt/cache/composer",
   "type": "shared"
  },
  "node-modules": {
   "directory": "/app/node_modules/.cache",
   "type": "shared"
  },
  "npm-install": {
   "directory": "/root/.npm",
   "type": "shared"
  },
  "root": {
   "directory": "/root/.cache",
   "type": "shared"
  }
 },
 "start": {
  "cmd": "bash /start-nginx.sh",
  "outputs": [
   "."
  ]
 },
 "steps": [
  {
   "caches": [
    "root"
   ],
   "name": "packages:image",
   "startingImage": "php:8.2.27-fpm",
   "useSecrets": false
  },
  {
   "caches": [
    "apt",
    "apt-lists",
    "root"
   ],
   "commands": [
    {
     "cmd": "sh -c 'apt-get update \u0026\u0026 apt-get install -y git nginx unzip zip'",
     "customName": "install apt packages: git nginx unzip zip"
    }
   ],
   "dependsOn": [
    "packages:image"
   ],
   "name": "packages:apt:nginx",
   "useSecrets": false
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": "/usr/bin/composer",
     "image": "composer:latest",
     "src": "/usr/bin/composer"
    },
    {
     "dest": ".",
     "src": "."
    },
    {
     "name": "COMPOSER_CACHE_DIR",
     "value": "/opt/cache/composer"
    },
    {
     "cmd": "composer install --ignore-platform-reqs"
    }
   ],
   "dependsOn": [
    "packages:apt:nginx"
   ],
   "name": "install"
  },
  {
   "assets": {
    "mise.toml": "[mise.toml]"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "MISE_DATA_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CONFIG_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CACHE_DIR",
     "value": "/mise/cache"
    },
    {
     "path": "/mise/shims"
    },
    {
     "customName": "create mise config",
     "name": "mise.toml",
     "path": "/etc/mise/config.toml"
    },
    {
     "cmd": "sh -c 'mise trust -a \u0026\u0026 mise install'",
     "customName": "install mise packages: node, npm"
    }
   ],
   "name": "packages:mise",
   "outputs": [
    "/mise/shims",
    "/mise/installs",
    "/usr/local/bin/mise",
    "/etc/mise/config.toml",
    "/root/.local/state/mise"
   ],
   "startingImage": "ghcr.io/railwayapp/railpack-builder-base:latest",
   "useSecrets": false
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "CI",
     "value": "true"
    },
    {
     "name": "NODE_ENV",
     "value": "production"
    },
    {
     "name": "NPM_CONFIG_PRODUCTION",
     "value": "false"
    },
    {
     "name": "YARN_PRODUCTION",
     "value": "false"
    },
    {
     "path": "/app/node_modules/.bin"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "setup:node"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": "package.json",
     "src": "package.json"
    },
    {
     "dest": "package-lock.json",
     "src": "package-lock.json"
    },
    {
     "cmd": "npm ci"
    }
   ],
   "dependsOn": [
    "packages:mise",
    "setup:node"
   ],
   "name": "install:node"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": ".",
     "src": "."
    },
    {
     "cmd": "npm run build"
    }
   ],
   "dependsOn": [
    "install:node"
   ],
   "name": "build:node",
   "outputs": [
    "/app"
   ]
  },
  {
   "assets": {
    "nginx.conf": "worker_processes 5;\ndaemon off;\n\nworker_rlimit_nofile 8192;\n\nevents {\n  worker_connections  4096;\n}\n\nhttp {\n    include    /etc/nginx/mime.types;\n    index    index.html index.htm index.php;\n\n    default_type application/octet-stream;\n    log_format   main '$remote_addr - $remote_user [$time_local]  $status '\n        '\"$request\" $body_bytes_sent \"$http_referer\" '\n        '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log /dev/stdout;\n    error_log /dev/stdout;\n    sendfile     on;\n    tcp_nopush   on;\n    server_names_hash_bucket_size 128; # this seems to be required for some vhosts\n\n    server {\n        listen 0.0.0.0:80;\n        listen [::]:80;\n\n        server_name localhost;\n\n        \n            root /app/public;\n        \n     \n        add_header X-Frame-Options \"SAMEORIGIN\";\n        add_header X-Content-Type-Options \"nosniff\";\n     \n        index index.php;\n     \n        charset utf-8;\n     \n        \n            location / {\n                try_files $uri $uri/ /index.php?$query_string;\n            }\n        \n        \n        \n     \n        location = /favicon.ico { access_log off; log_not_found off; }\n        location = /robots.txt  { access_log off; log_not_found off; }\n     \n        \n            error_page 404 /index.php;\n        \n     \n        location ~ \\.php$ {\n            fastcgi_pass 127.0.0.1:9000;\n            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;\n            include /etc/nginx/fastcgi_params;\n            include /etc/nginx/fastcgi.conf;\n        }\n     \n        location ~ /\\.(?!well-known).* {\n            deny all;\n        }\n    }\n}\n",
    "php-fpm.conf": "[www]\nlisten = 127.0.0.1:9000\nuser = nobody\npm = dynamic\npm.max_children = 50\npm.min_spare_servers = 4\npm.max_spare_servers = 32\npm.start_servers = 18\nclear_env = no\ncatch_workers_output = yes\n",
    "start-nginx.sh": "#!/bin/bash\n\nset -e\n\nPORT=${PORT:-80}\n\n# Set the port in the nginx config\nsed -i \"s/80/$PORT/g\" /etc/nginx/railpack.conf\n\n# Set the storage permissions for Laravel\nif [ \"$IS_LARAVEL\" = \"true\" ]; then\n    chmod -R ugo+rw /app/storage\nfi\n\necho \"Starting Nginx on port $PORT\"\n\n# Start php-fpm and nginx\nphp-fpm --fpm-config /etc/php-fpm.conf \u0026 nginx -c /etc/nginx/railpack.conf\n"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "customName": "create nginx config",
     "name": "nginx.conf",
     "path": "/etc/nginx/railpack.conf"
    },
    {
     "cmd": "nginx -t -c /etc/nginx/railpack.conf"
    },
    {
     "customName": "create php-fpm config",
     "name": "php-fpm.conf",
     "path": "/etc/php-fpm.conf"
    },
    {
     "customName": "create start nginx script",
     "mode": 493,
     "name": "start-nginx.sh",
     "path": "/start-nginx.sh"
    },
    {
     "name": "IS_LARAVEL",
     "value": "true"
    }
   ],
   "dependsOn": [
    "packages:apt:nginx"
   ],
   "name": "nginx:setup"
  }
 ]
}
---

[TestGenerateBuildPlanForExamples/php-vanilla - 1]
{
 "baseImage": "ghcr.io/railwayapp/railpack-runtime-base:latest",
 "caches": {
  "apt": {
   "directory": "/var/cache/apt",
   "type": "locked"
  },
  "apt-lists": {
   "directory": "/var/lib/apt/lists",
   "type": "locked"
  },
  "root": {
   "directory": "/root/.cache",
   "type": "shared"
  }
 },
 "start": {
  "cmd": "bash /start-nginx.sh",
  "outputs": [
   "."
  ]
 },
 "steps": [
  {
   "caches": [
    "root"
   ],
   "name": "packages:image",
   "startingImage": "php:8.4.3-fpm",
   "useSecrets": false
  },
  {
   "caches": [
    "apt",
    "apt-lists",
    "root"
   ],
   "commands": [
    {
     "cmd": "sh -c 'apt-get update \u0026\u0026 apt-get install -y git nginx unzip zip'",
     "customName": "install apt packages: git nginx unzip zip"
    }
   ],
   "dependsOn": [
    "packages:image"
   ],
   "name": "packages:apt:nginx",
   "useSecrets": false
  },
  {
   "assets": {
    "nginx.conf": "worker_processes 5;\ndaemon off;\n\nworker_rlimit_nofile 8192;\n\nevents {\n  worker_connections  4096;\n}\n\nhttp {\n    include    /etc/nginx/mime.types;\n    index    index.html index.htm index.php;\n\n    default_type application/octet-stream;\n    log_format   main '$remote_addr - $remote_user [$time_local]  $status '\n        '\"$request\" $body_bytes_sent \"$http_referer\" '\n        '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log /dev/stdout;\n    error_log /dev/stdout;\n    sendfile     on;\n    tcp_nopush   on;\n    server_names_hash_bucket_size 128; # this seems to be required for some vhosts\n\n    server {\n        listen 0.0.0.0:80;\n        listen [::]:80;\n\n        server_name localhost;\n\n        \n            root /app;\n        \n     \n        add_header X-Frame-Options \"SAMEORIGIN\";\n        add_header X-Content-Type-Options \"nosniff\";\n     \n        index index.php;\n     \n        charset utf-8;\n     \n        \n        \n        \n     \n        location = /favicon.ico { access_log off; log_not_found off; }\n        location = /robots.txt  { access_log off; log_not_found off; }\n     \n        \n     \n        location ~ \\.php$ {\n            fastcgi_pass 127.0.0.1:9000;\n            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;\n            include /etc/nginx/fastcgi_params;\n            include /etc/nginx/fastcgi.conf;\n        }\n     \n        location ~ /\\.(?!well-known).* {\n            deny all;\n        }\n    }\n}\n",
    "php-fpm.conf": "[www]\nlisten = 127.0.0.1:9000\nuser = nobody\npm = dynamic\npm.max_children = 50\npm.min_spare_servers = 4\npm.max_spare_servers = 32\npm.start_servers = 18\nclear_env = no\ncatch_workers_output = yes\n",
    "start-nginx.sh": "#!/bin/bash\n\nset -e\n\nPORT=${PORT:-80}\n\n# Set the port in the nginx config\nsed -i \"s/80/$PORT/g\" /etc/nginx/railpack.conf\n\n# Set the storage permissions for Laravel\nif [ \"$IS_LARAVEL\" = \"true\" ]; then\n    chmod -R ugo+rw /app/storage\nfi\n\necho \"Starting Nginx on port $PORT\"\n\n# Start php-fpm and nginx\nphp-fpm --fpm-config /etc/php-fpm.conf \u0026 nginx -c /etc/nginx/railpack.conf\n"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "customName": "create nginx config",
     "name": "nginx.conf",
     "path": "/etc/nginx/railpack.conf"
    },
    {
     "cmd": "nginx -t -c /etc/nginx/railpack.conf"
    },
    {
     "customName": "create php-fpm config",
     "name": "php-fpm.conf",
     "path": "/etc/php-fpm.conf"
    },
    {
     "customName": "create start nginx script",
     "mode": 493,
     "name": "start-nginx.sh",
     "path": "/start-nginx.sh"
    }
   ],
   "dependsOn": [
    "packages:apt:nginx"
   ],
   "name": "nginx:setup"
  },
  {
   "caches": [
    "root"
   ],
   "name": "packages:mise"
  }
 ]
}
---

[TestGenerateBuildPlanForExamples/php-vanilla-82 - 1]
{
 "baseImage": "ghcr.io/railwayapp/railpack-runtime-base:latest",
 "caches": {
  "apt": {
   "directory": "/var/cache/apt",
   "type": "locked"
  },
  "apt-lists": {
   "directory": "/var/lib/apt/lists",
   "type": "locked"
  },
  "composer": {
   "directory": "/opt/cache/composer",
   "type": "shared"
  },
  "root": {
   "directory": "/root/.cache",
   "type": "shared"
  }
 },
 "start": {
  "cmd": "bash /start-nginx.sh",
  "outputs": [
   "."
  ]
 },
 "steps": [
  {
   "caches": [
    "root"
   ],
   "name": "packages:image",
   "startingImage": "php:8.2.27-fpm",
   "useSecrets": false
  },
  {
   "caches": [
    "apt",
    "apt-lists",
    "root"
   ],
   "commands": [
    {
     "cmd": "sh -c 'apt-get update \u0026\u0026 apt-get install -y git nginx unzip zip'",
     "customName": "install apt packages: git nginx unzip zip"
    }
   ],
   "dependsOn": [
    "packages:image"
   ],
   "name": "packages:apt:nginx",
   "useSecrets": false
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": "/usr/bin/composer",
     "image": "composer:latest",
     "src": "/usr/bin/composer"
    },
    {
     "dest": ".",
     "src": "."
    },
    {
     "name": "COMPOSER_CACHE_DIR",
     "value": "/opt/cache/composer"
    },
    {
     "cmd": "composer install --ignore-platform-reqs"
    }
   ],
   "dependsOn": [
    "packages:apt:nginx"
   ],
   "name": "install"
  },
  {
   "assets": {
    "nginx.conf": "worker_processes 5;\ndaemon off;\n\nworker_rlimit_nofile 8192;\n\nevents {\n  worker_connections  4096;\n}\n\nhttp {\n    include    /etc/nginx/mime.types;\n    index    index.html index.htm index.php;\n\n    default_type application/octet-stream;\n    log_format   main '$remote_addr - $remote_user [$time_local]  $status '\n        '\"$request\" $body_bytes_sent \"$http_referer\" '\n        '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log /dev/stdout;\n    error_log /dev/stdout;\n    sendfile     on;\n    tcp_nopush   on;\n    server_names_hash_bucket_size 128; # this seems to be required for some vhosts\n\n    server {\n        listen 0.0.0.0:80;\n        listen [::]:80;\n\n        server_name localhost;\n\n        \n            root /app;\n        \n     \n        add_header X-Frame-Options \"SAMEORIGIN\";\n        add_header X-Content-Type-Options \"nosniff\";\n     \n        index index.php;\n     \n        charset utf-8;\n     \n        \n        \n        \n     \n        location = /favicon.ico { access_log off; log_not_found off; }\n        location = /robots.txt  { access_log off; log_not_found off; }\n     \n        \n     \n        location ~ \\.php$ {\n            fastcgi_pass 127.0.0.1:9000;\n            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;\n            include /etc/nginx/fastcgi_params;\n            include /etc/nginx/fastcgi.conf;\n        }\n     \n        location ~ /\\.(?!well-known).* {\n            deny all;\n        }\n    }\n}\n",
    "php-fpm.conf": "[www]\nlisten = 127.0.0.1:9000\nuser = nobody\npm = dynamic\npm.max_children = 50\npm.min_spare_servers = 4\npm.max_spare_servers = 32\npm.start_servers = 18\nclear_env = no\ncatch_workers_output = yes\n",
    "start-nginx.sh": "#!/bin/bash\n\nset -e\n\nPORT=${PORT:-80}\n\n# Set the port in the nginx config\nsed -i \"s/80/$PORT/g\" /etc/nginx/railpack.conf\n\n# Set the storage permissions for Laravel\nif [ \"$IS_LARAVEL\" = \"true\" ]; then\n    chmod -R ugo+rw /app/storage\nfi\n\necho \"Starting Nginx on port $PORT\"\n\n# Start php-fpm and nginx\nphp-fpm --fpm-config /etc/php-fpm.conf \u0026 nginx -c /etc/nginx/railpack.conf\n"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "customName": "create nginx config",
     "name": "nginx.conf",
     "path": "/etc/nginx/railpack.conf"
    },
    {
     "cmd": "nginx -t -c /etc/nginx/railpack.conf"
    },
    {
     "customName": "create php-fpm config",
     "name": "php-fpm.conf",
     "path": "/etc/php-fpm.conf"
    },
    {
     "customName": "create start nginx script",
     "mode": 493,
     "name": "start-nginx.sh",
     "path": "/start-nginx.sh"
    }
   ],
   "dependsOn": [
    "packages:apt:nginx"
   ],
   "name": "nginx:setup"
  },
  {
   "caches": [
    "root"
   ],
   "name": "packages:mise"
  }
 ]
}
---

[TestGenerateBuildPlanForExamples/node-next - 1]
{
 "baseImage": "ghcr.io/railwayapp/railpack-runtime-base:latest",
 "caches": {
  "next-": {
   "directory": "/app/.next/cache",
   "type": "shared"
  },
  "node-modules": {
   "directory": "/app/node_modules/.cache",
   "type": "shared"
  },
  "npm-install": {
   "directory": "/root/.npm",
   "type": "shared"
  },
  "root": {
   "directory": "/root/.cache",
   "type": "shared"
  }
 },
 "start": {
  "cmd": "npm run start",
  "outputs": [
   "."
  ],
  "variables": {
   "CI": "true",
   "NODE_ENV": "production",
   "NPM_CONFIG_PRODUCTION": "false",
   "YARN_PRODUCTION": "false"
  }
 },
 "steps": [
  {
   "assets": {
    "mise.toml": "[mise.toml]"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "MISE_DATA_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CONFIG_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CACHE_DIR",
     "value": "/mise/cache"
    },
    {
     "path": "/mise/shims"
    },
    {
     "customName": "create mise config",
     "name": "mise.toml",
     "path": "/etc/mise/config.toml"
    },
    {
     "cmd": "sh -c 'mise trust -a \u0026\u0026 mise install'",
     "customName": "install mise packages: node, npm"
    }
   ],
   "name": "packages:mise",
   "outputs": [
    "/mise/shims",
    "/mise/installs",
    "/usr/local/bin/mise",
    "/etc/mise/config.toml",
    "/root/.local/state/mise"
   ],
   "startingImage": "ghcr.io/railwayapp/railpack-builder-base:latest",
   "useSecrets": false
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "CI",
     "value": "true"
    },
    {
     "name": "NODE_ENV",
     "value": "production"
    },
    {
     "name": "NPM_CONFIG_PRODUCTION",
     "value": "false"
    },
    {
     "name": "YARN_PRODUCTION",
     "value": "false"
    },
    {
     "path": "/app/node_modules/.bin"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "setup"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": "package.json",
     "src": "package.json"
    },
    {
     "dest": "package-lock.json",
     "src": "package-lock.json"
    },
    {
     "cmd": "npm ci"
    }
   ],
   "dependsOn": [
    "packages:mise",
    "setup"
   ],
   "name": "install"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": ".",
     "src": "."
    },
    {
     "cmd": "npm run build"
    }
   ],
   "dependsOn": [
    "install"
   ],
   "name": "build"
  }
 ]
}
---

[TestGenerateBuildPlanForExamples/node-turborepo - 1]
{
 "baseImage": "ghcr.io/railwayapp/railpack-runtime-base:latest",
 "caches": {
  "next-apps-docs": {
   "directory": "/app/apps/docs/.next/cache",
   "type": "shared"
  },
  "next-apps-web": {
   "directory": "/app/apps/web/.next/cache",
   "type": "shared"
  },
  "node-modules": {
   "directory": "/app/node_modules/.cache",
   "type": "shared"
  },
  "npm-install": {
   "directory": "/root/.npm",
   "type": "shared"
  },
  "root": {
   "directory": "/root/.cache",
   "type": "shared"
  }
 },
 "start": {
  "outputs": [
   "."
  ],
  "variables": {
   "CI": "true",
   "NODE_ENV": "production",
   "NPM_CONFIG_PRODUCTION": "false",
   "YARN_PRODUCTION": "false"
  }
 },
 "steps": [
  {
   "assets": {
    "mise.toml": "[mise.toml]"
   },
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "MISE_DATA_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CONFIG_DIR",
     "value": "/mise"
    },
    {
     "name": "MISE_CACHE_DIR",
     "value": "/mise/cache"
    },
    {
     "path": "/mise/shims"
    },
    {
     "customName": "create mise config",
     "name": "mise.toml",
     "path": "/etc/mise/config.toml"
    },
    {
     "cmd": "sh -c 'mise trust -a \u0026\u0026 mise install'",
     "customName": "install mise packages: node, npm"
    }
   ],
   "name": "packages:mise",
   "outputs": [
    "/mise/shims",
    "/mise/installs",
    "/usr/local/bin/mise",
    "/etc/mise/config.toml",
    "/root/.local/state/mise"
   ],
   "startingImage": "ghcr.io/railwayapp/railpack-builder-base:latest",
   "useSecrets": false
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "name": "CI",
     "value": "true"
    },
    {
     "name": "NODE_ENV",
     "value": "production"
    },
    {
     "name": "NPM_CONFIG_PRODUCTION",
     "value": "false"
    },
    {
     "name": "YARN_PRODUCTION",
     "value": "false"
    },
    {
     "path": "/app/node_modules/.bin"
    }
   ],
   "dependsOn": [
    "packages:mise"
   ],
   "name": "setup"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": "package.json",
     "src": "package.json"
    },
    {
     "cmd": "corepack enable"
    },
    {
     "cmd": "corepack prepare --activate"
    }
   ],
   "dependsOn": [
    "packages:mise",
    "setup"
   ],
   "name": "corepack"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": "package.json",
     "src": "package.json"
    },
    {
     "dest": "apps/docs/package.json",
     "src": "apps/docs/package.json"
    },
    {
     "dest": "apps/web/package.json",
     "src": "apps/web/package.json"
    },
    {
     "dest": "packages/eslint-config/package.json",
     "src": "packages/eslint-config/package.json"
    },
    {
     "dest": "packages/typescript-config/package.json",
     "src": "packages/typescript-config/package.json"
    },
    {
     "dest": "packages/ui/package.json",
     "src": "packages/ui/package.json"
    },
    {
     "dest": "package-lock.json",
     "src": "package-lock.json"
    },
    {
     "dest": ".npmrc",
     "src": ".npmrc"
    },
    {
     "cmd": "npm ci"
    }
   ],
   "dependsOn": [
    "packages:mise",
    "setup",
    "corepack"
   ],
   "name": "install"
  },
  {
   "caches": [
    "root"
   ],
   "commands": [
    {
     "dest": ".",
     "src": "."
    },
    {
     "cmd": "npm run build"
    }
   ],
   "dependsOn": [
    "install"
   ],
   "name": "build"
  }
 ]
}
---
