name: Run Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  find-examples:
    runs-on: ubuntu-latest
    outputs:
      examples: ${{ steps.find-examples.outputs.examples }}
    steps:
      - uses: actions/checkout@v4

      - name: Find examples with test.json
        id: find-examples
        run: |
          examples=$(find examples -name "test.json" -exec dirname {} \; | xargs -n 1 basename | jq -R -s -c 'split("\n")[:-1]')
          echo "examples=$examples" >> "$GITHUB_OUTPUT"

  test:
    needs: find-examples
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example: ${{ fromJson(needs.find-examples.outputs.examples) }}
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.4"
          cache: true

      # Set up GitHub Actions runtime for BuildKit cache
      - name: Set up BuildKit GHA cache
        uses: crazy-max/ghaction-github-runtime@v3

      - name: Start BuildKit
        run: |
          docker run --rm --privileged -d \
            --name buildkit \
            -e BUILDKIT_DEBUG=1 \
            moby/buildkit:latest

          # Wait for BuildKit to be ready
          sleep 5

          echo "BUILDKIT_HOST=docker-container://buildkit" >> $GITHUB_ENV

      - name: Install dependencies
        run: go mod download

      - name: Run test for ${{ matrix.example }}
        env:
          ACTIONS_CACHE_URL: ${{ env.ACTIONS_CACHE_URL }}
          ACTIONS_RUNTIME_TOKEN: ${{ env.ACTIONS_RUNTIME_TOKEN }}
        run: |
          # Add cache import/export flags to the test command
          go test -v ./integration_tests \
            -run "TestExamplesIntegration/${{ matrix.example }}" \
            -timeout 30m \
            -buildkit-cache-import=type=gha,scope=${{ matrix.example }} \
            -buildkit-cache-export=type=gha,mode=max,scope=${{ matrix.example }}
